# assume
# - all full_row regexp are anchored to left and right, e.g. /^.*H.*H.*$/
# - all partial_left are anchored to left, e.g. /^H/
# - ditto partial_right
# - all chars are [A-Z]
# - sides read from top RHS first, then round anti-clockwise
# - infer the minimum row length from the number of rows per side

# check for
# - odd number of full_rows per side
# - 3 sides
# - same number of rows per side
# - a partial_* having a row to belong to

side
full_row '.*H.*H.*'
   partial_left '.*H'
full_row '(DI|NS|TH|OM)*'
   partial_left  '(DI|NS|TH|OM){1}'
   partial_left  '(DI|NS|TH|OM){2}'
   partial_left  '(DI|NS|TH|OM){3}'
   partial_right '(DI|NS|TH|OM){1}'
   partial_right '(DI|NS|TH|OM){2}'
   partial_right '(DI|NS|TH|OM){3}'
   partial_left  '[DNTO]'
   partial_left  '[DNTO].[DNTO]'
   partial_right '[ISHM]'
   partial_right '[ISHM].[ISHM]'
full_row 'F.*[AO].*[AO].*'
   partial_left  'F'
   partial_left  'F.*[AO]'
   partial_right '[AO].*'
   partial_right '[AO].*[AO].*'
full_row '(O|RHH|MM)*'
   partial_left  '(O|RHH|MM){1}'
   partial_left  '(O|RHH|MM){2}'
   partial_left  '(O|RHH|MM){3}'
   partial_left  '(O|RHH|MM){1}'
   partial_right '(O|RHH|MM){1}'
   partial_right '(O|RHH|MM){2}'
   partial_right '(O|RHH|MM){3}'
full_row '.*'
full_row 'C*MC(CCC|MM)*'
   partial_left  '.*M'
   partial_left  '.*MC'
   partial_left  'C*MC'
full_row '[^C]*[^R]*III.*'
   partial_left  '.*I'
   partial_left  '.*II'
   partial_left  '.*III'

side
full_row '.*G.*V.*H.*'
   partial_left  '.*G'
   partial_left  '.*V'
   partial_left  '.*H'
   partial_left  '.*G.*V'
   partial_left  '.*V.*H'
full_row '[CR]*'
   partial_left  '.*[CR]'
   partial_left  '.*[CR]{2}'
   partial_left  '.*[CR]{3}'
full_row '.*XEXM*'
   partial_left  '.*X'
   partial_left  '.*XE'
   partial_left  '.*XEX'
full_row '.*DD.*CCM.*'
   partial_left  '.*D'
   partial_left  '.*DD'
   partial_left  '.*C'
   partial_left  '.*CC'
   partial_left  '.*CCM'
full_row '.*XHCR.*X.*'
   partial_left  '.*X'
   partial_left  '.*XH'
   partial_left  '.*XHC'
   partial_left  '.*XHCR'
full_row '.*(.)(.)(.)(.)\4\3\2\1.*'
   partial_left  '.*(.)\1'
   partial_left  '.*(.)..\1'
   partial_left  '.*(.)....\1'
   partial_left  '.*(.)......\1'
full_row '.*(IN|SE|HI)'
   partial_right  '[NEI]'
   partial_right  '[ISH].'

side
full_row '.*SE.*UE.*'
   partial_left  '.*S'
   partial_left  '.*SE'
   partial_left  '.*U'
   partial_left  '.*E'
   partial_left  '.*UE'
   partial_left  '.*S.*U'
full_row '.*LR.*RL.*'
   partial_left  '.*L'
   partial_left  '.*LR'
   partial_left  '.*L.+R'
   partial_left  '.*L.+L'
full_row '.*OXR.*'
   partial_left  '.*O'
   partial_left  '.*X'
   partial_left  '.*R'
   partial_left  '.*OX'
   partial_left  '.*XR'
full_row '([^EMC]|EM)'
full_row '(HHX|^HX)*'
full_row '.*PRR.*DDC.*'
   partial_left  '.*P'
   partial_left  '.*R'
   partial_left  '.*PR'
   partial_left  '.*RR'
   partial_left  '.*PRR'
   partial_left  '.*D'
   partial_left  '.*C'
   partial_left  '.*DD'
   partial_left  '.*DC'
   partial_left  '.*DDC'
full_row '.*'

